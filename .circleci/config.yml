version: 2

jobs:
  # Build & Deploy against development backend rerr
  "build-dev":
    docker:
      - image: docker:17.06.1-ce-git
    steps:
      # Initialization
      - checkout
      - setup_remote_docker
      - run:
          name: Installation of build dependencies.
          command: |
            apk update
            apk add --no-cache bash openssl curl
            apk upgrade
            
      # Restoration of node_modules from cache.
      - restore_cache:
          key: docker-tc-notify-{{ checksum "package-lock.json" }}

      # Build of Docker image.
      - run:
          name: Build of Docker image
          command: ./build.sh DEV

      # Caching node modules.
      - save_cache:
          key: docker-tc-notify-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

      # Deployment.
      - run:
          name: Installing AWS client
          command: |
            apk add --no-cache jq py-pip sudo
            sudo pip install awscli --upgrade
            
      - deploy:
          name: Running MasterScript
          command: |
            git clone --branch devsts https://github.com/topcoder-platform/tc-deploy-scripts ../buildscript
            cp ./../buildscript/master_deploy.sh .
            cp ./../buildscript/buildenv.sh .
            cp ./../buildscript/awsconfiguration.sh .
            ./awsconfiguration.sh DEV
            source awsenvconf            
            ./buildenv.sh -e DEV -b dev-tcnotify-deployvar
            source buildenvvar
            ./master_deploy.sh -d ECS -e DEV -t $CIRCLE_SHA1 -s dev-tcnotify-appvar
            
  "build-prod":
    docker:
      - image: docker:17.06.1-ce-git
    steps:
      # Initialization.
      - checkout
      - setup_remote_docker
      - run:
          name: Installation of build dependencies.
          command: apk add --no-cache bash

      # Restoration of node_modules from cache.
      - restore_cache:
          key: docker-tc-notify-{{ checksum "package-lock.json" }}

      # Build of Docker image.
      - run:
          name: Build of Docker image
          command: ./build.sh PROD

      # Caching node modules.
      - save_cache:
          key: docker-tc-notify-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

      # Deployment.
      - run:
          name: Installing AWS client
          command: |
            apk add --no-cache jq py-pip sudo
            sudo pip install awscli --upgrade
      - deploy:
          command: ./deploy.sh PROD $CIRCLE_SHA1

workflows:
  version: 2
  build:
    jobs:
      # Development builds are executed on "develop" branch only.
      - "build-dev":
          context : org-global
          filters:
            branches:
              only: [dev, dev_mstest2]
      - "build-prod":
          filters:
            branches:
              only: master
